{"ast":null,"code":"var _jsxFileName = \"D:\\\\cnpm-test\\\\src\\\\Components\\\\CinemaListComponent\\\\d1.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './d1.css'; // Nhập file CSS để tạo kiểu\n// import Next30Days from './GetNext30Days';\n// export default function DateScroller() {\n//     // Danh sách các ngày\n//     const [currentIndex, setCurrentIndex] = useState(0);\n//     const days = [\n//         { Day: 17, Dweek: 'Thu', Month: 'Oct' },\n//         { Day: 18, Dweek: 'Fri', Month: 'Oct' },\n//         { Day: 19, Dweek: 'Sat', Month: 'Oct' },\n//         { Day: 20, Dweek: 'Sun', Month: 'Oct' },\n//         { Day: 21, Dweek: 'Mon', Month: 'Oct' },\n//         { Day: 22, Dweek: 'Tue', Month: 'Oct' },\n//         { Day: 23, Dweek: 'Wed', Month: 'Oct' },\n//         { Day: 24, Dweek: 'Thu', Month: 'Oct' },\n//         { Day: 25, Dweek: 'Fri', Month: 'Oct' },\n//         { Day: 26, Dweek: 'Sat', Month: 'Oct' },\n//         { Day: 27, Dweek: 'Sun', Month: 'Oct' },\n//         { Day: 28, Dweek: 'Mon', Month: 'Oct' },\n//         { Day: 29, Dweek: 'Tue', Month: 'Oct' },\n//         { Day: 30, Dweek: 'Wed', Month: 'Oct' },\n//         { Day: 31, Dweek: 'Thu', Month: 'Oct' },\n//         { Day: 1, Dweek: 'Fri', Month: 'Nov' },\n//         { Day: 2, Dweek: 'Sat', Month: 'Nov' },\n//         { Day: 3, Dweek: 'Sun', Month: 'Nov' },\n//         { Day: 4, Dweek: 'Mon', Month: 'Nov' },\n//         { Day: 5, Dweek: 'Tue', Month: 'Nov' },\n//         { Day: 6, Dweek: 'Wed', Month: 'Nov' },\n//         { Day: 7, Dweek: 'Thu', Month: 'Nov' },\n//         { Day: 8, Dweek: 'Fri', Month: 'Nov' },\n//         { Day: 9, Dweek: 'Sat', Month: 'Nov' },\n//         { Day: 10, Dweek: 'Sun', Month: 'Nov' },\n//     ];\n\n//     const handlePrev = () => {\n//         setCurrentIndex((prevIndex) => Math.max(prevIndex - 1, 0));\n//     };\n\n//     const handleNext = () => {\n//         setCurrentIndex((prevIndex) => Math.min(prevIndex + 1, days.length - 1));\n//     };\n\n//     return (\n//         <div className=\"date-scroller\">\n//             <button onClick={handlePrev} disabled={currentIndex === 0}>&lt;</button>\n//             <div className=\"days\">\n//                 {days.slice(currentIndex, currentIndex + 5).map((day, index) => (\n//                     <div key={index} className={`day ${index === index ? 'active' : ''}`}>\n//                         {/* {day} */}\n//                         {day.Month} {day.Day} ({day.Dweek}) {/* Hiển thị thông tin ngày */}\n//                     </div>\n//                 ))}\n//             </div>\n//             <button onClick={handleNext} disabled={currentIndex === days.length - 5}>&gt;</button>\n//         </div>\n//     );\n// };\n\nimport React, { useState } from 'react';\nimport './d1.css'; // Nhập file CSS để tạo kiểu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DateScroller() {\n  _s();\n  // Danh sách các ngày\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const days = [{\n    Day: 17,\n    Dweek: 'Thu',\n    Month: 'Oct'\n  }, {\n    Day: 18,\n    Dweek: 'Fri',\n    Month: 'Oct'\n  }, {\n    Day: 19,\n    Dweek: 'Sat',\n    Month: 'Oct'\n  }, {\n    Day: 20,\n    Dweek: 'Sun',\n    Month: 'Oct'\n  }, {\n    Day: 21,\n    Dweek: 'Mon',\n    Month: 'Oct'\n  }, {\n    Day: 22,\n    Dweek: 'Tue',\n    Month: 'Oct'\n  }, {\n    Day: 23,\n    Dweek: 'Wed',\n    Month: 'Oct'\n  }, {\n    Day: 24,\n    Dweek: 'Thu',\n    Month: 'Oct'\n  }, {\n    Day: 25,\n    Dweek: 'Fri',\n    Month: 'Oct'\n  }, {\n    Day: 26,\n    Dweek: 'Sat',\n    Month: 'Oct'\n  }, {\n    Day: 27,\n    Dweek: 'Sun',\n    Month: 'Oct'\n  }, {\n    Day: 28,\n    Dweek: 'Mon',\n    Month: 'Oct'\n  }, {\n    Day: 29,\n    Dweek: 'Tue',\n    Month: 'Oct'\n  }, {\n    Day: 30,\n    Dweek: 'Wed',\n    Month: 'Oct'\n  }, {\n    Day: 31,\n    Dweek: 'Thu',\n    Month: 'Oct'\n  }, {\n    Day: 1,\n    Dweek: 'Fri',\n    Month: 'Nov'\n  }, {\n    Day: 2,\n    Dweek: 'Sat',\n    Month: 'Nov'\n  }, {\n    Day: 3,\n    Dweek: 'Sun',\n    Month: 'Nov'\n  }, {\n    Day: 4,\n    Dweek: 'Mon',\n    Month: 'Nov'\n  }, {\n    Day: 5,\n    Dweek: 'Tue',\n    Month: 'Nov'\n  }, {\n    Day: 6,\n    Dweek: 'Wed',\n    Month: 'Nov'\n  }, {\n    Day: 7,\n    Dweek: 'Thu',\n    Month: 'Nov'\n  }, {\n    Day: 8,\n    Dweek: 'Fri',\n    Month: 'Nov'\n  }, {\n    Day: 9,\n    Dweek: 'Sat',\n    Month: 'Nov'\n  }, {\n    Day: 10,\n    Dweek: 'Sun',\n    Month: 'Nov'\n  }];\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => Math.min(prevIndex + 1, days.length - 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-scroller\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrev,\n      disabled: currentIndex === 0,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days\",\n      children: days.slice(currentIndex, currentIndex + 5).map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day ${index === 1 ? 'active' : ''}` // Sửa điều kiện ở đây\n        ,\n        children: [day.Month, \" \", day.Day, \" (\", day.Dweek, \") \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: currentIndex === days.length - 5,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(DateScroller, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = DateScroller;\nvar _c;\n$RefreshReg$(_c, \"DateScroller\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateScroller","_s","currentIndex","setCurrentIndex","days","Day","Dweek","Month","handlePrev","prevIndex","Math","max","handleNext","min","length","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","day","index","_c","$RefreshReg$"],"sources":["D:/cnpm-test/src/Components/CinemaListComponent/d1.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './d1.css'; // Nhập file CSS để tạo kiểu\r\n// import Next30Days from './GetNext30Days';\r\n// export default function DateScroller() {\r\n//     // Danh sách các ngày\r\n//     const [currentIndex, setCurrentIndex] = useState(0);\r\n//     const days = [\r\n//         { Day: 17, Dweek: 'Thu', Month: 'Oct' },\r\n//         { Day: 18, Dweek: 'Fri', Month: 'Oct' },\r\n//         { Day: 19, Dweek: 'Sat', Month: 'Oct' },\r\n//         { Day: 20, Dweek: 'Sun', Month: 'Oct' },\r\n//         { Day: 21, Dweek: 'Mon', Month: 'Oct' },\r\n//         { Day: 22, Dweek: 'Tue', Month: 'Oct' },\r\n//         { Day: 23, Dweek: 'Wed', Month: 'Oct' },\r\n//         { Day: 24, Dweek: 'Thu', Month: 'Oct' },\r\n//         { Day: 25, Dweek: 'Fri', Month: 'Oct' },\r\n//         { Day: 26, Dweek: 'Sat', Month: 'Oct' },\r\n//         { Day: 27, Dweek: 'Sun', Month: 'Oct' },\r\n//         { Day: 28, Dweek: 'Mon', Month: 'Oct' },\r\n//         { Day: 29, Dweek: 'Tue', Month: 'Oct' },\r\n//         { Day: 30, Dweek: 'Wed', Month: 'Oct' },\r\n//         { Day: 31, Dweek: 'Thu', Month: 'Oct' },\r\n//         { Day: 1, Dweek: 'Fri', Month: 'Nov' },\r\n//         { Day: 2, Dweek: 'Sat', Month: 'Nov' },\r\n//         { Day: 3, Dweek: 'Sun', Month: 'Nov' },\r\n//         { Day: 4, Dweek: 'Mon', Month: 'Nov' },\r\n//         { Day: 5, Dweek: 'Tue', Month: 'Nov' },\r\n//         { Day: 6, Dweek: 'Wed', Month: 'Nov' },\r\n//         { Day: 7, Dweek: 'Thu', Month: 'Nov' },\r\n//         { Day: 8, Dweek: 'Fri', Month: 'Nov' },\r\n//         { Day: 9, Dweek: 'Sat', Month: 'Nov' },\r\n//         { Day: 10, Dweek: 'Sun', Month: 'Nov' },\r\n//     ];\r\n\r\n//     const handlePrev = () => {\r\n//         setCurrentIndex((prevIndex) => Math.max(prevIndex - 1, 0));\r\n//     };\r\n\r\n//     const handleNext = () => {\r\n//         setCurrentIndex((prevIndex) => Math.min(prevIndex + 1, days.length - 1));\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"date-scroller\">\r\n//             <button onClick={handlePrev} disabled={currentIndex === 0}>&lt;</button>\r\n//             <div className=\"days\">\r\n//                 {days.slice(currentIndex, currentIndex + 5).map((day, index) => (\r\n//                     <div key={index} className={`day ${index === index ? 'active' : ''}`}>\r\n//                         {/* {day} */}\r\n//                         {day.Month} {day.Day} ({day.Dweek}) {/* Hiển thị thông tin ngày */}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <button onClick={handleNext} disabled={currentIndex === days.length - 5}>&gt;</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './d1.css'; // Nhập file CSS để tạo kiểu\r\n\r\nexport default function DateScroller() {\r\n    // Danh sách các ngày\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const days = [\r\n        { Day: 17, Dweek: 'Thu', Month: 'Oct' },\r\n        { Day: 18, Dweek: 'Fri', Month: 'Oct' },\r\n        { Day: 19, Dweek: 'Sat', Month: 'Oct' },\r\n        { Day: 20, Dweek: 'Sun', Month: 'Oct' },\r\n        { Day: 21, Dweek: 'Mon', Month: 'Oct' },\r\n        { Day: 22, Dweek: 'Tue', Month: 'Oct' },\r\n        { Day: 23, Dweek: 'Wed', Month: 'Oct' },\r\n        { Day: 24, Dweek: 'Thu', Month: 'Oct' },\r\n        { Day: 25, Dweek: 'Fri', Month: 'Oct' },\r\n        { Day: 26, Dweek: 'Sat', Month: 'Oct' },\r\n        { Day: 27, Dweek: 'Sun', Month: 'Oct' },\r\n        { Day: 28, Dweek: 'Mon', Month: 'Oct' },\r\n        { Day: 29, Dweek: 'Tue', Month: 'Oct' },\r\n        { Day: 30, Dweek: 'Wed', Month: 'Oct' },\r\n        { Day: 31, Dweek: 'Thu', Month: 'Oct' },\r\n        { Day: 1, Dweek: 'Fri', Month: 'Nov' },\r\n        { Day: 2, Dweek: 'Sat', Month: 'Nov' },\r\n        { Day: 3, Dweek: 'Sun', Month: 'Nov' },\r\n        { Day: 4, Dweek: 'Mon', Month: 'Nov' },\r\n        { Day: 5, Dweek: 'Tue', Month: 'Nov' },\r\n        { Day: 6, Dweek: 'Wed', Month: 'Nov' },\r\n        { Day: 7, Dweek: 'Thu', Month: 'Nov' },\r\n        { Day: 8, Dweek: 'Fri', Month: 'Nov' },\r\n        { Day: 9, Dweek: 'Sat', Month: 'Nov' },\r\n        { Day: 10, Dweek: 'Sun', Month: 'Nov' },\r\n    ];\r\n\r\n    const handlePrev = () => {\r\n        setCurrentIndex((prevIndex) => Math.max(prevIndex - 1, 0));\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setCurrentIndex((prevIndex) => Math.min(prevIndex + 1, days.length - 1));\r\n    };\r\n\r\n    return (\r\n        <div className=\"date-scroller\">\r\n            <button onClick={handlePrev} disabled={currentIndex === 0}>&lt;</button>\r\n            <div className=\"days\">\r\n                {days.slice(currentIndex, currentIndex + 5).map((day, index) => (\r\n                    <div \r\n                        key={index} \r\n                        className={`day ${index === 1 ? 'active' : ''}`} // Sửa điều kiện ở đây\r\n                    >\r\n                        {day.Month} {day.Day} ({day.Dweek}) {/* Hiển thị thông tin ngày */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button onClick={handleNext} disabled={currentIndex === days.length - 5}>&gt;</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}