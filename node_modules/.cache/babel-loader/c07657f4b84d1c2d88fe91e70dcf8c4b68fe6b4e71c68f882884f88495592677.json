{"ast":null,"code":"var _jsxFileName = \"D:\\\\cnpm-test\\\\src\\\\Components\\\\CinemaListComponent\\\\MovieList.js\";\n// import React from 'react';\n\n// export default function MovieList({ selectedDay }) {\n//     const moviesByDays = {\n//         0: [\"Movie 1\", \"Movie 2\"],  // Hôm nay\n//         1: [\"Movie 3\", \"Movie 4\"],  // Ngày mai\n//         2: [\"Movie 5\"],             // 2 ngày sau\n//         default: []                 // Những ngày khác\n//     };\n\n//     // Tính số ngày cách biệt giữa ngày được chọn và hôm nay\n//     const calculateDayDiff = (selectedDate) => {\n//         const today = new Date();\n//         const selected = new Date(today.getFullYear(), selectedDate.monthIndex, selectedDate.Day);\n\n//         // Tính toán số ngày chênh lệch\n//         const diffTime = selected - today;\n//         return Math.floor(diffTime / (1000 * 60 * 60 * 24));\n//     };\n\n//     const dayDiff = calculateDayDiff(selectedDay);\n\n//     // Lấy danh sách phim theo số ngày cách biệt, nếu không tìm thấy thì dùng list mặc định\n//     const movies = moviesByDays[dayDiff] || moviesByDays.default;\n\n//     return (\n//         <div>\n//             <h3>Danh sách phim cho {selectedDay.Month} {selectedDay.Day}:</h3>\n//             {movies.length > 0 ? (\n//                 <ul>\n//                     {movies.map((movie, index) => (\n//                         <li key={index}>{movie}</li>\n//                     ))}\n//                 </ul>\n//             ) : (\n//                 <p>Không có phim nào.</p>\n//             )}\n//         </div>\n//     );\n// }\n\nimport React from 'react';\nimport styles from './cinemaList.module.css'; // CSS để tạo kiểu\nimport AHDmovie1 from './movieImage/captain.png';\nimport AHDmovie2 from './movieImage/infinityWar.png';\nimport AHDmovie3 from './movieImage/ironMan.png';\nimport AHDmovie4 from './movieImage/spiderman.png';\nimport AHDmovie5 from './movieImage/blackPanther.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieList(_ref) {\n  let {\n    selectedDay\n  } = _ref;\n  const moviesByDays = {\n    0: [{\n      title: \"Captain America: The Winter Soldier\",\n      poster: AHDmovie1,\n      showtimes: [\"10:00\", \"13:00\", \"19:00\"]\n    }, {\n      title: \"Avengers: Infinity War\",\n      poster: AHDmovie2,\n      showtimes: [\"11:00\", \"16:00\", \"21:00\"]\n    }],\n    1: [{\n      title: \"Iron Man\",\n      poster: AHDmovie3,\n      showtimes: [\"12:00\", \"15:00\", \"20:00\"]\n    }, {\n      title: \"Spider-Man: No Way Home\",\n      poster: AHDmovie4,\n      showtimes: [\"14:00\", \"18:00\"]\n    }],\n    2: [{\n      title: \"Black Panther\",\n      poster: AHDmovie5,\n      showtimes: [\"09:00\", \"11:00\", \"17:00\"]\n    }],\n    default: []\n  };\n  const calculateDayDiff = selectedDate => {\n    const today = new Date();\n    const selected = new Date(today.getFullYear(), selectedDate.monthIndex, selectedDate.Day);\n    const diffTime = selected - today;\n    return Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  };\n  const dayDiff = calculateDayDiff(selectedDay);\n  const movies = moviesByDays[dayDiff] || moviesByDays.default;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.movieList,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Danh s\\xE1ch phim cho \", selectedDay.Month, \" \", selectedDay.Day, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.movieGrid,\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.movieItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.posterContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: movie.title,\n            className: styles.poster\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.showtimeContainer,\n            children: movie.showtimes.map((time, timeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.showtimeBox,\n              children: time\n            }, timeIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Kh\\xF4ng c\\xF3 phim n\\xE0o.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","styles","AHDmovie1","AHDmovie2","AHDmovie3","AHDmovie4","AHDmovie5","jsxDEV","_jsxDEV","MovieList","_ref","selectedDay","moviesByDays","title","poster","showtimes","default","calculateDayDiff","selectedDate","today","Date","selected","getFullYear","monthIndex","Day","diffTime","Math","floor","dayDiff","movies","className","movieList","children","Month","fileName","_jsxFileName","lineNumber","columnNumber","length","movieGrid","map","movie","index","movieItem","posterContainer","src","alt","showtimeContainer","time","timeIndex","showtimeBox","_c","$RefreshReg$"],"sources":["D:/cnpm-test/src/Components/CinemaListComponent/MovieList.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// export default function MovieList({ selectedDay }) {\r\n//     const moviesByDays = {\r\n//         0: [\"Movie 1\", \"Movie 2\"],  // Hôm nay\r\n//         1: [\"Movie 3\", \"Movie 4\"],  // Ngày mai\r\n//         2: [\"Movie 5\"],             // 2 ngày sau\r\n//         default: []                 // Những ngày khác\r\n//     };\r\n\r\n//     // Tính số ngày cách biệt giữa ngày được chọn và hôm nay\r\n//     const calculateDayDiff = (selectedDate) => {\r\n//         const today = new Date();\r\n//         const selected = new Date(today.getFullYear(), selectedDate.monthIndex, selectedDate.Day);\r\n        \r\n//         // Tính toán số ngày chênh lệch\r\n//         const diffTime = selected - today;\r\n//         return Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n//     };\r\n\r\n//     const dayDiff = calculateDayDiff(selectedDay);\r\n\r\n//     // Lấy danh sách phim theo số ngày cách biệt, nếu không tìm thấy thì dùng list mặc định\r\n//     const movies = moviesByDays[dayDiff] || moviesByDays.default;\r\n\r\n//     return (\r\n//         <div>\r\n//             <h3>Danh sách phim cho {selectedDay.Month} {selectedDay.Day}:</h3>\r\n//             {movies.length > 0 ? (\r\n//                 <ul>\r\n//                     {movies.map((movie, index) => (\r\n//                         <li key={index}>{movie}</li>\r\n//                     ))}\r\n//                 </ul>\r\n//             ) : (\r\n//                 <p>Không có phim nào.</p>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport styles from './cinemaList.module.css'; // CSS để tạo kiểu\r\nimport AHDmovie1 from './movieImage/captain.png';\r\nimport AHDmovie2 from './movieImage/infinityWar.png';\r\nimport AHDmovie3 from './movieImage/ironMan.png';\r\nimport AHDmovie4 from './movieImage/spiderman.png';\r\nimport AHDmovie5 from './movieImage/blackPanther.png';\r\n\r\n\r\nexport default function MovieList({ selectedDay }) {\r\n    const moviesByDays = {\r\n        0: [\r\n            { title: \"Captain America: The Winter Soldier\", poster: AHDmovie1, showtimes: [\"10:00\", \"13:00\", \"19:00\"] },\r\n            { title: \"Avengers: Infinity War\", poster: AHDmovie2, showtimes: [\"11:00\", \"16:00\", \"21:00\"] }\r\n        ],\r\n        1: [\r\n            { title: \"Iron Man\", poster: AHDmovie3, showtimes: [\"12:00\", \"15:00\", \"20:00\"] },\r\n            { title: \"Spider-Man: No Way Home\", poster: AHDmovie4, showtimes: [\"14:00\", \"18:00\"] }\r\n        ],\r\n        2: [\r\n            { title: \"Black Panther\", poster: AHDmovie5, showtimes: [\"09:00\", \"11:00\", \"17:00\"] }\r\n        ],\r\n        default: []\r\n    };\r\n\r\n    const calculateDayDiff = (selectedDate) => {\r\n        const today = new Date();\r\n        const selected = new Date(today.getFullYear(), selectedDate.monthIndex, selectedDate.Day);\r\n        const diffTime = selected - today;\r\n        return Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    };\r\n\r\n    const dayDiff = calculateDayDiff(selectedDay);\r\n    const movies = moviesByDays[dayDiff] || moviesByDays.default;\r\n\r\n    return (\r\n        <div className={styles.movieList}>\r\n            <h3>Danh sách phim cho {selectedDay.Month} {selectedDay.Day}:</h3>\r\n            {movies.length > 0 ? (\r\n                <div className={styles.movieGrid}>\r\n                    {movies.map((movie, index) => (\r\n                        <div key={index} className={styles.movieItem}>\r\n                            <div className={styles.posterContainer}>\r\n                                <img src={movie.poster} alt={movie.title} className={styles.poster} />\r\n                            </div>\r\n                            <div>\r\n                                <h4>{movie.title}</h4>\r\n                                <br/>\r\n                                <div className={styles.showtimeContainer}>\r\n                                    {movie.showtimes.map((time, timeIndex) => (\r\n                                        <div key={timeIndex} className={styles.showtimeBox}>\r\n                                            {time}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <p>Không có phim nào.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}