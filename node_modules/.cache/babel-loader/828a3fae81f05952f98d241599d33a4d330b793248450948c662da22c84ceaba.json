{"ast":null,"code":"var _jsxFileName = \"D:\\\\cnpm-test\\\\src\\\\Components\\\\MemberInfo.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import \"../style.css\";\n\n// export default function MemberInfo() {\n//   const [formData, setFormData] = useState({\n//     fullname: '',\n//     email: '',\n//     phone: '',\n//     cmnd: '',\n//     dob: '',\n//     city: '',\n//     district: '',\n//     gender: '', \n//     address: '', \n//     profilePicture: null\n//   });\n\n//   const districtsByCity = {\n//     \"Ho Chi Minh\": [\n//             \"Quận 1\",\n//             \"Quận 2\",\n//             \"Quận 3\",\n//             \"Quận 4\",\n//             \"Quận 5\",\n//             \"Quận 6\",\n//             \"Quận 7\",\n//             \"Quận 8\",\n//             \"Quận 9\",\n//             \"Quận 10\",\n//             \"Quận 11\",\n//             \"Quận 12\",\n//             \"Bình Tân\",\n//             \"Bình Thạnh\",\n//             \"Gò Vấp\",\n//             \"Phú Nhuận\",\n//             \"Tân Bình\",\n//             \"Tân Phú\",\n//             \"Thủ Đức\"\n//         ],\n//     \"Ha Noi\": [\n//       \"Ba Đình\",\n//       \"Hoàn Kiếm\",\n//       \"Tây Hồ\",\n//       \"Long Biên\",\n//       \"Cầu Giấy\",\n//       \"Đống Đa\",\n//       \"Hai Bà Trưng\",\n//       \"Hoàng Mai\",\n//       \"Thanh Xuân\",\n//       \"Sóc Sơn\",\n//       \"Đông Anh\",\n//       \"Gia Lâm\",\n//       \"Nam Từ Liêm\",\n//       \"Bắc Từ Liêm\",\n//       \"Hà Đông\"\n//   ],\n\n//     \"Da Nang\": [\n//             \"Hải Châu\",\n//             \"Sơn Trà\",\n//             \"Ngũ Hành Sơn\",\n//             \"Liên Chiểu\",\n//             \"Cẩm Lệ\",\n//             \"Hoàng Sa\",\n//             \"Hòa Vang\",\n//             \"Thanh Khê\",\n//             \"Cẩm Sơn\"\n//       ],\n\n//       \"Hai Phong\": [\n//         \"Hồng Bàng\",\n//         \"Lê Chân\",\n//         \"Ngô Quyền\",\n//         \"Kiến An\",\n//         \"Hải An\",\n//         \"Dương Kinh\",\n//         \"Đồ Sơn\",\n//         \"An Dương\",\n//         \"An Lão\",\n//         \"Kiến Thụy\",\n//         \"Tiên Lãng\",\n//         \"Vĩnh Bảo\",\n//         \"Cát Hải\",\n//         \"Bạch Long Vĩ\",\n//         \"Thủy Nguyên\"\n//     ],\n//     \"Can Tho\": [\n//       \"Ninh Kiều\",\n//       \"Bình Thủy\",\n//       \"Cái Răng\",\n//       \"Ô Môn\",\n//       \"Thốt Nốt\",\n//       \"Phong Điền\",\n//       \"Cờ Đỏ\",\n//       \"Thới Lai\",\n//       \"Vĩnh Thạnh\"\n//   ]\n\n//     // Thêm các thành phố khác\n//   };\n\n//   const [districts, setDistricts] = useState([]);\n//   const [errors, setErrors] = useState({}); // Thêm state để quản lý lỗi\n//   // Cập nhật quận/huyện khi thay đổi thành phố\n//   useEffect(() => {\n//     if (formData.city) {\n//       setDistricts(districtsByCity[formData.city] || []);\n//     }\n//   }, [formData.city]);\n\n//   // Hàm xử lý khi thay đổi dữ liệu\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Hàm xem trước hình ảnh\n//   const previewImage = (event) => {\n//     const file = event.target.files[0];\n//     setFormData({ ...formData, profilePicture: file });\n\n//     const reader = new FileReader();\n//     reader.onload = function(e) {\n//       const imagePreview = document.getElementById('imagePreview');\n//       imagePreview.style.backgroundImage = `url(${e.target.result})`;\n//       imagePreview.style.backgroundSize = 'cover';\n//       imagePreview.style.backgroundPosition = 'center';\n//       imagePreview.innerHTML = ''; // Xóa chữ \"No Image\"\n//     };\n//     if (file) {\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   // // Hàm xử lý khi submit form\n//   // const handleSubmit = (e) => {\n//   //   e.preventDefault();\n//   //   const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd'];\n//   //   for (let field of requiredFields) {\n//   //     if (!formData[field].trim()) {\n//   //       alert(`Vui lòng nhập ${field}!`);\n//   //       return;\n//   //     }\n//   //   }\n//   //   alert('Cập nhật thông tin thành công!');\n//   // };\n\n// //   for (let field of requiredFields) {\n// //     const input = document.getElementById(field);\n// //     if (!input.value.trim()) {\n// //         const fieldLabel = input.previousElementSibling.textContent.replace(':', '').replace('*', '').trim();\n// //         alert('Vui lòng nhập ' + fieldLabel + '!'); // Thông báo cho người dùng\n// //         input.focus(); // Đưa con trỏ đến ô chưa được điền\n// //         valid = false; // Đánh dấu rằng biểu mẫu không hợp lệ\n// //         e.preventDefault(); // Ngăn chặn việc gửi biểu mẫu\n// //         break; // Thoát khỏi vòng lặp\n// //     }\n// // }\n//       // Hàm xử lý khi submit form\n//       const handleSubmit = (e) => {\n//         e.preventDefault();\n//         const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd', 'address'];\n//         const fieldLabels = {\n//           fullname: 'Họ tên',\n//           email: 'Email',\n//           phone: 'Số điện thoại',\n//           dob: 'Ngày sinh',\n//           cmnd: 'CMND',\n//           address: 'Địa chỉ'\n//           // Thêm các trường khác nếu cần\n//         };\n\n//         let valid = true;\n//         let newErrors = {};\n\n//         for (let field of requiredFields) {\n//           if (!formData[field].trim()) {\n//             newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\n//             valid = false;\n//           }\n//         }\n\n//         if (!valid) {\n//           setErrors(newErrors);\n//           // Tự động cuộn đến phần đầu của form để người dùng thấy thông báo lỗi\n//           window.scrollTo({ top: 0, behavior: 'smooth' });\n//           return;\n//         }\n\n//         // Nếu tất cả các trường hợp lệ\n//         alert('Cập nhật thông tin thành công!');\n//         // Thực hiện các hành động tiếp theo như gửi dữ liệu lên server\n//       };\n\n//   return (\n//     <div>\n//       <h2>Thông tin tài khoản</h2>\n//       <form id=\"memberForm\" onSubmit={handleSubmit} noValidate encType=\"multipart/form-data\">\n//         <div className=\"image-upload-container\">\n//           <div id=\"imagePreview\" className=\"image-preview\" onClick={() => document.getElementById('profilePicture').click()}>\n//             <span>No Image</span>\n//           </div>\n//           <input\n//             type=\"file\"\n//             id=\"profilePicture\"\n//             name=\"profilePicture\"\n//             accept=\"image/*\"\n//             style={{ display: 'none' }}\n//             onChange={previewImage}\n//           />\n//           <button type=\"button\" onClick={() => document.getElementById('profilePicture').click()}>Tải ảnh lên</button>\n//         </div>\n\n//         <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"fullname\"><span className=\"highlight\">* </span>Họ tên:</label>\n//             <input\n//               type=\"text\"\n//               id=\"fullname\"\n//               name=\"fullname\"\n//               value={formData.fullname}\n//               onChange={handleChange}\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\n//               placeholder=\"Họ tên\"\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\"><span className=\"highlight\">* </span>Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\n//               placeholder=\"Email\"\n//               required\n//             />\n//           </div>\n//         </div>\n\n//         {/* Các trường khác tương tự */}\n//       <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"phone\"><span className=\"highlight\">* </span>Số điện thoại:</label>\n//             <input\n//               type=\"tel\"\n//               id=\"phone\"\n//               name=\"phone\"\n//               value={formData.phone}\n//               onChange={handleChange}\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\n//               placeholder=\"Số điện thoại\"\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"cmnd\"><span className=\"highlight\">* </span>CMND/Hộ chiếu:</label>\n//             <input\n//               type=\"card\"\n//               id=\"cmnd\"\n//               name=\"cmnd\"\n//               value={formData.cmnd}\n//               onChange={handleChange}\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\n//               placeholder=\"CMND/Hộ chiếu\"\n//               required\n//             />\n//           </div>\n//         </div>\n\n//        {/* Hàng ngày sinh và Giới tính */}\n//         <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"dob\"><span className=\"highlight\">* </span>Ngày sinh:</label>\n//             <input\n//               type=\"date\"\n//               id=\"dob\"\n//               name=\"dob\"\n//               value={formData.dob}\n//               onChange={handleChange}\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"gender\">Giới tính:</label>\n//             <select\n//               id=\"gender\"\n//               name=\"gender\"\n//               value={formData.gender}\n//               onChange={handleChange}\n//               className=\"input\"\n//             >\n//               <option value=\"\" disabled>Chọn giới tính</option>\n//               <option value=\"Nam\">Nam</option>\n//               <option value=\"Nữ\">Nữ</option>\n//               <option value=\"Khác\">Khác</option>\n//             </select>\n//           </div>\n//           </div>\n\n//           <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"city\">Tỉnh/Thành phố:</label>\n//             <select\n//               id=\"city\"\n//               name=\"city\"\n//               value={formData.city}\n//               onChange={handleChange}\n//               className=\"input\"\n//               placeholder=\"Tỉnh/Thành phố\"\n//             >\n//               <option value=\"\" disabled>Chọn tỉnh/thành phố</option>\n//               <option value=\"Ho Chi Minh\">Hồ Chí Minh</option>\n//               <option value=\"Ha Noi\">Hà Nội</option>\n//               <option value=\"Da Nang\">Đà Nẵng</option>\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"district\">Quận/Huyện:</label>\n//             <input\n//               list=\"districts\"\n//               id=\"district\"\n//               name=\"district\"\n//               value={formData.district}\n//               onChange={handleChange}\n//               className=\"input\"\n//               autoComplete=\"off\"\n//             />\n//             <datalist id=\"districts\">\n//               {districts.map((district, index) => (\n//                 <option key={index} value={district} />\n//               ))}\n//             </datalist>\n//           </div>\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"address\"><span className=\"highlight\">* </span>Địa chỉ:</label>\n//           <input\n//             type=\"text\"\n//             id=\"address\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//             className={`input ${errors.address ? 'input-error' : ''}`}\n//             placeholder=\"Địa chỉ\"\n//             required\n//           />\n//         </div>\n\n//         <button type=\"submit\">Cập nhật</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from 'react';\n// import \"../style.css\";\n\n// export default function MemberInfo() {\n//   const [formData, setFormData] = useState({\n//     fullname: '',\n//     email: '',\n//     phone: '',\n//     cmnd: '',\n//     dob: '',\n//     city: '',\n//     district: '',\n//     gender: '', \n//     address: '', \n//     profilePicture: null\n//   });\n\n//   const [districts, setDistricts] = useState([]);\n//   const [errors, setErrors] = useState({}); // Thêm state để quản lý lỗi\n\n//   const districtsByCity = {\n//     \"Ho Chi Minh\": [\n//       \"Quận 1\",\n//       \"Quận 2\",\n//       \"Quận 3\",\n//       \"Quận 4\",\n//       \"Quận 5\",\n//       \"Quận 6\",\n//       \"Quận 7\",\n//       \"Quận 8\",\n//       \"Quận 9\",\n//       \"Quận 10\",\n//       \"Quận 11\",\n//       \"Quận 12\",\n//       \"Bình Tân\",\n//       \"Bình Thạnh\",\n//       \"Gò Vấp\",\n//       \"Phú Nhuận\",\n//       \"Tân Bình\",\n//       \"Tân Phú\",\n//       \"Thủ Đức\"\n//     ],\n//     \"Ha Noi\": [\n//       \"Ba Đình\",\n//       \"Hoàn Kiếm\",\n//       \"Tây Hồ\",\n//       \"Long Biên\",\n//       \"Cầu Giấy\",\n//       \"Đống Đa\",\n//       \"Hai Bà Trưng\",\n//       \"Hoàng Mai\",\n//       \"Thanh Xuân\",\n//       \"Sóc Sơn\",\n//       \"Đông Anh\",\n//       \"Gia Lâm\",\n//       \"Nam Từ Liêm\",\n//       \"Bắc Từ Liêm\",\n//       \"Hà Đông\"\n//     ],\n//     \"Da Nang\": [\n//       \"Hải Châu\",\n//       \"Sơn Trà\",\n//       \"Ngũ Hành Sơn\",\n//       \"Liên Chiểu\",\n//       \"Cẩm Lệ\",\n//       \"Hoàng Sa\",\n//       \"Hòa Vang\",\n//       \"Thanh Khê\",\n//       \"Cẩm Sơn\"\n//     ],\n//     \"Hai Phong\": [\n//       \"Hồng Bàng\",\n//       \"Lê Chân\",\n//       \"Ngô Quyền\",\n//       \"Kiến An\",\n//       \"Hải An\",\n//       \"Dương Kinh\",\n//       \"Đồ Sơn\",\n//       \"An Dương\",\n//       \"An Lão\",\n//       \"Kiến Thụy\",\n//       \"Tiên Lãng\",\n//       \"Vĩnh Bảo\",\n//       \"Cát Hải\",\n//       \"Bạch Long Vĩ\",\n//       \"Thủy Nguyên\"\n//     ],\n//     \"Can Tho\": [\n//       \"Ninh Kiều\",\n//       \"Bình Thủy\",\n//       \"Cái Răng\",\n//       \"Ô Môn\",\n//       \"Thốt Nốt\",\n//       \"Phong Điền\",\n//       \"Cờ Đỏ\",\n//       \"Thới Lai\",\n//       \"Vĩnh Thạnh\"\n//     ]\n//     // Thêm các thành phố khác\n//   };\n\n//   // Cập nhật quận/huyện khi thay đổi thành phố\n//   useEffect(() => {\n//     if (formData.city) {\n//       setDistricts(districtsByCity[formData.city] || []);\n//     }\n//   }, [formData.city]);\n\n//   // Hàm xử lý khi thay đổi dữ liệu\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//     // Xóa thông báo lỗi khi người dùng bắt đầu nhập\n//     setErrors({ ...errors, [name]: '' });\n//   };\n\n//   // Hàm xem trước hình ảnh\n//   const previewImage = (event) => {\n//     const file = event.target.files[0];\n//     setFormData({ ...formData, profilePicture: file });\n\n//     const reader = new FileReader();\n//     reader.onload = function(e) {\n//       const imagePreview = document.getElementById('imagePreview');\n//       imagePreview.style.backgroundImage = `url(${e.target.result})`;\n//       imagePreview.style.backgroundSize = 'cover';\n//       imagePreview.style.backgroundPosition = 'center';\n//       imagePreview.innerHTML = ''; // Xóa chữ \"No Image\"\n//     };\n//     if (file) {\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   // Hàm xử lý khi submit form\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd', 'address'];\n//     const fieldLabels = {\n//       fullname: 'Họ tên',\n//       email: 'Email',\n//       phone: 'Số điện thoại',\n//       dob: 'Ngày sinh',\n//       cmnd: 'CMND',\n//       address: 'Địa chỉ'\n//       // Thêm các trường khác nếu cần\n//     };\n\n//     let valid = true;\n//     let newErrors = {};\n\n//     for (let field of requiredFields) {\n//       if (!formData[field].trim()) {\n//         newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\n//         valid = false;\n//       }\n//     }\n\n//     if (!valid) {\n//       setErrors(newErrors);\n//       // Tự động cuộn đến phần đầu của form để người dùng thấy thông báo lỗi\n//       window.scrollTo({ top: 0, behavior: 'smooth' });\n//       return;\n//     }\n\n//     // Nếu tất cả các trường hợp lệ\n//     alert('Cập nhật thông tin thành công!');\n//     // Thực hiện các hành động tiếp theo như gửi dữ liệu lên server\n//   };\n\n//   return (\n//     <div>\n//       <h2>Thông tin tài khoản</h2>\n\n//       {/* Hiển thị thông báo lỗi ở đầu form nếu có */}\n//       {Object.keys(errors).length > 0 && (\n//         <div className=\"error-messages\">\n//           {Object.values(errors).map((error, index) => (\n//             <p key={index} className=\"error-text\">{error}</p>\n//           ))}\n//         </div>\n//       )}\n\n//       <form id=\"memberForm\" onSubmit={handleSubmit} noValidate encType=\"multipart/form-data\">\n//         <div className=\"image-upload-container\">\n//           <div \n//             id=\"imagePreview\" \n//             className=\"image-preview\" \n//             onClick={() => document.getElementById('profilePicture').click()}\n//           >\n//             <span>No Image</span>\n//           </div>\n//           <input\n//             type=\"file\"\n//             id=\"profilePicture\"\n//             name=\"profilePicture\"\n//             accept=\"image/*\"\n//             style={{ display: 'none' }}\n//             onChange={previewImage}\n//           />\n//           <button \n//             type=\"button\" \n//             onClick={() => document.getElementById('profilePicture').click()}\n//           >\n//             Tải ảnh lên\n//           </button>\n//         </div>\n\n//         <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"fullname\">\n//               <span className=\"highlight\">* </span>Họ tên:\n//             </label>\n//             <input\n//               type=\"text\"\n//               id=\"fullname\"\n//               name=\"fullname\"\n//               value={formData.fullname}\n//               onChange={handleChange}\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\n//               placeholder=\"Họ tên\"\n//               required\n//             />\n//             {errors.fullname && <span className=\"error-text\">{errors.fullname}</span>}\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\">\n//               <span className=\"highlight\">* </span>Email:\n//             </label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className={`input ${errors.email ? 'input-error' : ''}`}\n//               placeholder=\"Email\"\n//               required\n//             />\n//             {errors.email && <span className=\"error-text\">{errors.email}</span>}\n//           </div>\n//         </div>\n\n//         {/* Các trường khác tương tự */}\n//         <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"phone\">\n//               <span className=\"highlight\">* </span>Số điện thoại:\n//             </label>\n//             <input\n//               type=\"tel\"\n//               id=\"phone\"\n//               name=\"phone\"\n//               value={formData.phone}\n//               onChange={handleChange}\n//               className={`input ${errors.phone ? 'input-error' : ''}`}\n//               placeholder=\"Số điện thoại\"\n//               required\n//             />\n//             {errors.phone && <span className=\"error-text\">{errors.phone}</span>}\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"cmnd\">\n//               <span className=\"highlight\">* </span>CMND/Hộ chiếu:\n//             </label>\n//             <input\n//               type=\"text\"\n//               id=\"cmnd\"\n//               name=\"cmnd\"\n//               value={formData.cmnd}\n//               onChange={handleChange}\n//               className={`input ${errors.cmnd ? 'input-error' : ''}`}\n//               placeholder=\"CMND/Hộ chiếu\"\n//               required\n//             />\n//             {errors.cmnd && <span className=\"error-text\">{errors.cmnd}</span>}\n//           </div>\n//         </div>\n\n//         {/* Hàng ngày sinh và Giới tính */}\n//         <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"dob\">\n//               <span className=\"highlight\">* </span>Ngày sinh:\n//             </label>\n//             <input\n//               type=\"date\"\n//               id=\"dob\"\n//               name=\"dob\"\n//               value={formData.dob}\n//               onChange={handleChange}\n//               className={`input ${errors.dob ? 'input-error' : ''}`}\n//               required\n//             />\n//             {errors.dob && <span className=\"error-text\">{errors.dob}</span>}\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"gender\">Giới tính:</label>\n//             <select\n//               id=\"gender\"\n//               name=\"gender\"\n//               value={formData.gender}\n//               onChange={handleChange}\n//               className=\"input\"\n//             >\n//               <option value=\"\" disabled>Chọn giới tính</option>\n//               <option value=\"Nam\">Nam</option>\n//               <option value=\"Nữ\">Nữ</option>\n//               <option value=\"Khác\">Khác</option>\n//             </select>\n//           </div>\n//         </div>\n\n//         <div className=\"form-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"city\">Tỉnh/Thành phố:</label>\n//             <select\n//               id=\"city\"\n//               name=\"city\"\n//               value={formData.city}\n//               onChange={handleChange}\n//               className=\"input\"\n//               placeholder=\"Tỉnh/Thành phố\"\n//             >\n//               <option value=\"\" disabled>Chọn tỉnh/thành phố</option>\n//               <option value=\"Ho Chi Minh\">Hồ Chí Minh</option>\n//               <option value=\"Ha Noi\">Hà Nội</option>\n//               <option value=\"Da Nang\">Đà Nẵng</option>\n//               <option value=\"Hai Phong\">Hải Phòng</option>\n//               <option value=\"Can Tho\">Cần Thơ</option>\n//               {/* Thêm các thành phố khác nếu cần */}\n//             </select>\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"district\">Quận/Huyện:</label>\n//             <input\n//               list=\"districts\"\n//               id=\"district\"\n//               name=\"district\"\n//               value={formData.district}\n//               onChange={handleChange}\n//               className=\"input\"\n//               autoComplete=\"off\"\n//             />\n//             <datalist id=\"districts\">\n//               {districts.map((district, index) => (\n//                 <option key={index} value={district} />\n//               ))}\n//             </datalist>\n//           </div>\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"address\">\n//             <span className=\"highlight\">* </span>Địa chỉ:\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"address\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//             className={`input ${errors.address ? 'input-error' : ''}`}\n//             placeholder=\"Địa chỉ\"\n//             required\n//           />\n//           {errors.address && <span className=\"error-text\">{errors.address}</span>}\n//         </div>\n\n//         <button type=\"submit\">Cập nhật</button>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MemberInfo() {\n  _s();\n  const [formData, setFormData] = useState({\n    fullname: '',\n    email: '',\n    phone: '',\n    cmnd: '',\n    dob: '',\n    city: '',\n    district: '',\n    gender: '',\n    address: '',\n    profilePicture: null\n  });\n  const [districts, setDistricts] = useState([]);\n  const [errors, setErrors] = useState({}); // Định nghĩa setErrors ở đây\n\n  const districtsByCity = {\n    // Dữ liệu quận/huyện\n  };\n  useEffect(() => {\n    if (formData.city) {\n      setDistricts(districtsByCity[formData.city] || []);\n    }\n  }, [formData.city]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    setErrors({\n      ...errors,\n      [name]: ''\n    }); // Xóa lỗi khi người dùng nhập\n  };\n  const previewImage = event => {\n    const file = event.target.files[0];\n    setFormData({\n      ...formData,\n      profilePicture: file\n    });\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const imagePreview = document.getElementById('imagePreview');\n      imagePreview.style.backgroundImage = `url(${e.target.result})`;\n      imagePreview.style.backgroundSize = 'cover';\n      imagePreview.style.backgroundPosition = 'center';\n      imagePreview.innerHTML = ''; // Xóa chữ \"No Image\"\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd', 'address'];\n    const fieldLabels = {\n      fullname: 'Họ tên',\n      email: 'Email',\n      phone: 'Số điện thoại',\n      dob: 'Ngày sinh',\n      cmnd: 'CMND',\n      address: 'Địa chỉ'\n    };\n    let valid = true;\n    let newErrors = {};\n    for (let field of requiredFields) {\n      if (!formData[field].trim()) {\n        newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\n        valid = false;\n      }\n    }\n    if (!valid) {\n      setErrors(newErrors); // Sử dụng setErrors ở đây\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n      return;\n    }\n\n    // Nếu tất cả các trường hợp lệ\n    alert('Cập nhật thông tin thành công!');\n    // Thực hiện các hành động tiếp theo như gửi dữ liệu lên server\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Th\\xF4ng tin t\\xE0i kho\\u1EA3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-messages\",\n      children: Object.values(errors).map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"memberForm\",\n      onSubmit: handleSubmit,\n      noValidate: true,\n      encType: \"multipart/form-data\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"C\\u1EADp nh\\u1EADt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 847,\n    columnNumber: 5\n  }, this);\n}\n_s(MemberInfo, \"GrK1NhsOZ9ADPYQMaYHsgnlMGI8=\");\n_c = MemberInfo;\nvar _c;\n$RefreshReg$(_c, \"MemberInfo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemberInfo","_s","formData","setFormData","fullname","email","phone","cmnd","dob","city","district","gender","address","profilePicture","districts","setDistricts","errors","setErrors","districtsByCity","handleChange","e","name","value","target","previewImage","event","file","files","reader","FileReader","onload","imagePreview","document","getElementById","style","backgroundImage","result","backgroundSize","backgroundPosition","innerHTML","readAsDataURL","handleSubmit","preventDefault","requiredFields","fieldLabels","valid","newErrors","field","trim","window","scrollTo","top","behavior","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","className","values","map","error","index","id","onSubmit","noValidate","encType","type","_c","$RefreshReg$"],"sources":["D:/cnpm-test/src/Components/MemberInfo.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import \"../style.css\";\r\n\r\n// export default function MemberInfo() {\r\n//   const [formData, setFormData] = useState({\r\n//     fullname: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     cmnd: '',\r\n//     dob: '',\r\n//     city: '',\r\n//     district: '',\r\n//     gender: '', \r\n//     address: '', \r\n//     profilePicture: null\r\n//   });\r\n\r\n\r\n//   const districtsByCity = {\r\n//     \"Ho Chi Minh\": [\r\n//             \"Quận 1\",\r\n//             \"Quận 2\",\r\n//             \"Quận 3\",\r\n//             \"Quận 4\",\r\n//             \"Quận 5\",\r\n//             \"Quận 6\",\r\n//             \"Quận 7\",\r\n//             \"Quận 8\",\r\n//             \"Quận 9\",\r\n//             \"Quận 10\",\r\n//             \"Quận 11\",\r\n//             \"Quận 12\",\r\n//             \"Bình Tân\",\r\n//             \"Bình Thạnh\",\r\n//             \"Gò Vấp\",\r\n//             \"Phú Nhuận\",\r\n//             \"Tân Bình\",\r\n//             \"Tân Phú\",\r\n//             \"Thủ Đức\"\r\n//         ],\r\n//     \"Ha Noi\": [\r\n//       \"Ba Đình\",\r\n//       \"Hoàn Kiếm\",\r\n//       \"Tây Hồ\",\r\n//       \"Long Biên\",\r\n//       \"Cầu Giấy\",\r\n//       \"Đống Đa\",\r\n//       \"Hai Bà Trưng\",\r\n//       \"Hoàng Mai\",\r\n//       \"Thanh Xuân\",\r\n//       \"Sóc Sơn\",\r\n//       \"Đông Anh\",\r\n//       \"Gia Lâm\",\r\n//       \"Nam Từ Liêm\",\r\n//       \"Bắc Từ Liêm\",\r\n//       \"Hà Đông\"\r\n//   ],\r\n    \r\n//     \"Da Nang\": [\r\n//             \"Hải Châu\",\r\n//             \"Sơn Trà\",\r\n//             \"Ngũ Hành Sơn\",\r\n//             \"Liên Chiểu\",\r\n//             \"Cẩm Lệ\",\r\n//             \"Hoàng Sa\",\r\n//             \"Hòa Vang\",\r\n//             \"Thanh Khê\",\r\n//             \"Cẩm Sơn\"\r\n//       ],\r\n\r\n//       \"Hai Phong\": [\r\n//         \"Hồng Bàng\",\r\n//         \"Lê Chân\",\r\n//         \"Ngô Quyền\",\r\n//         \"Kiến An\",\r\n//         \"Hải An\",\r\n//         \"Dương Kinh\",\r\n//         \"Đồ Sơn\",\r\n//         \"An Dương\",\r\n//         \"An Lão\",\r\n//         \"Kiến Thụy\",\r\n//         \"Tiên Lãng\",\r\n//         \"Vĩnh Bảo\",\r\n//         \"Cát Hải\",\r\n//         \"Bạch Long Vĩ\",\r\n//         \"Thủy Nguyên\"\r\n//     ],\r\n//     \"Can Tho\": [\r\n//       \"Ninh Kiều\",\r\n//       \"Bình Thủy\",\r\n//       \"Cái Răng\",\r\n//       \"Ô Môn\",\r\n//       \"Thốt Nốt\",\r\n//       \"Phong Điền\",\r\n//       \"Cờ Đỏ\",\r\n//       \"Thới Lai\",\r\n//       \"Vĩnh Thạnh\"\r\n//   ]\r\n\r\n//     // Thêm các thành phố khác\r\n//   };\r\n  \r\n//   const [districts, setDistricts] = useState([]);\r\n//   const [errors, setErrors] = useState({}); // Thêm state để quản lý lỗi\r\n//   // Cập nhật quận/huyện khi thay đổi thành phố\r\n//   useEffect(() => {\r\n//     if (formData.city) {\r\n//       setDistricts(districtsByCity[formData.city] || []);\r\n//     }\r\n//   }, [formData.city]);\r\n\r\n//   // Hàm xử lý khi thay đổi dữ liệu\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   // Hàm xem trước hình ảnh\r\n//   const previewImage = (event) => {\r\n//     const file = event.target.files[0];\r\n//     setFormData({ ...formData, profilePicture: file });\r\n    \r\n//     const reader = new FileReader();\r\n//     reader.onload = function(e) {\r\n//       const imagePreview = document.getElementById('imagePreview');\r\n//       imagePreview.style.backgroundImage = `url(${e.target.result})`;\r\n//       imagePreview.style.backgroundSize = 'cover';\r\n//       imagePreview.style.backgroundPosition = 'center';\r\n//       imagePreview.innerHTML = ''; // Xóa chữ \"No Image\"\r\n//     };\r\n//     if (file) {\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   // // Hàm xử lý khi submit form\r\n//   // const handleSubmit = (e) => {\r\n//   //   e.preventDefault();\r\n//   //   const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd'];\r\n//   //   for (let field of requiredFields) {\r\n//   //     if (!formData[field].trim()) {\r\n//   //       alert(`Vui lòng nhập ${field}!`);\r\n//   //       return;\r\n//   //     }\r\n//   //   }\r\n//   //   alert('Cập nhật thông tin thành công!');\r\n//   // };\r\n\r\n// //   for (let field of requiredFields) {\r\n// //     const input = document.getElementById(field);\r\n// //     if (!input.value.trim()) {\r\n// //         const fieldLabel = input.previousElementSibling.textContent.replace(':', '').replace('*', '').trim();\r\n// //         alert('Vui lòng nhập ' + fieldLabel + '!'); // Thông báo cho người dùng\r\n// //         input.focus(); // Đưa con trỏ đến ô chưa được điền\r\n// //         valid = false; // Đánh dấu rằng biểu mẫu không hợp lệ\r\n// //         e.preventDefault(); // Ngăn chặn việc gửi biểu mẫu\r\n// //         break; // Thoát khỏi vòng lặp\r\n// //     }\r\n// // }\r\n//       // Hàm xử lý khi submit form\r\n//       const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd', 'address'];\r\n//         const fieldLabels = {\r\n//           fullname: 'Họ tên',\r\n//           email: 'Email',\r\n//           phone: 'Số điện thoại',\r\n//           dob: 'Ngày sinh',\r\n//           cmnd: 'CMND',\r\n//           address: 'Địa chỉ'\r\n//           // Thêm các trường khác nếu cần\r\n//         };\r\n\r\n//         let valid = true;\r\n//         let newErrors = {};\r\n\r\n//         for (let field of requiredFields) {\r\n//           if (!formData[field].trim()) {\r\n//             newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\r\n//             valid = false;\r\n//           }\r\n//         }\r\n\r\n//         if (!valid) {\r\n//           setErrors(newErrors);\r\n//           // Tự động cuộn đến phần đầu của form để người dùng thấy thông báo lỗi\r\n//           window.scrollTo({ top: 0, behavior: 'smooth' });\r\n//           return;\r\n//         }\r\n\r\n//         // Nếu tất cả các trường hợp lệ\r\n//         alert('Cập nhật thông tin thành công!');\r\n//         // Thực hiện các hành động tiếp theo như gửi dữ liệu lên server\r\n//       };\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Thông tin tài khoản</h2>\r\n//       <form id=\"memberForm\" onSubmit={handleSubmit} noValidate encType=\"multipart/form-data\">\r\n//         <div className=\"image-upload-container\">\r\n//           <div id=\"imagePreview\" className=\"image-preview\" onClick={() => document.getElementById('profilePicture').click()}>\r\n//             <span>No Image</span>\r\n//           </div>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"profilePicture\"\r\n//             name=\"profilePicture\"\r\n//             accept=\"image/*\"\r\n//             style={{ display: 'none' }}\r\n//             onChange={previewImage}\r\n//           />\r\n//           <button type=\"button\" onClick={() => document.getElementById('profilePicture').click()}>Tải ảnh lên</button>\r\n//         </div>\r\n\r\n//         <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"fullname\"><span className=\"highlight\">* </span>Họ tên:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"fullname\"\r\n//               name=\"fullname\"\r\n//               value={formData.fullname}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\r\n//               placeholder=\"Họ tên\"\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\"><span className=\"highlight\">* </span>Email:</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\r\n//               placeholder=\"Email\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Các trường khác tương tự */}\r\n//       <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"phone\"><span className=\"highlight\">* </span>Số điện thoại:</label>\r\n//             <input\r\n//               type=\"tel\"\r\n//               id=\"phone\"\r\n//               name=\"phone\"\r\n//               value={formData.phone}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\r\n//               placeholder=\"Số điện thoại\"\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"cmnd\"><span className=\"highlight\">* </span>CMND/Hộ chiếu:</label>\r\n//             <input\r\n//               type=\"card\"\r\n//               id=\"cmnd\"\r\n//               name=\"cmnd\"\r\n//               value={formData.cmnd}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\r\n//               placeholder=\"CMND/Hộ chiếu\"\r\n//               required\r\n//             />\r\n//           </div>\r\n//         </div>\r\n\r\n//        {/* Hàng ngày sinh và Giới tính */}\r\n//         <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"dob\"><span className=\"highlight\">* </span>Ngày sinh:</label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"dob\"\r\n//               name=\"dob\"\r\n//               value={formData.dob}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"gender\">Giới tính:</label>\r\n//             <select\r\n//               id=\"gender\"\r\n//               name=\"gender\"\r\n//               value={formData.gender}\r\n//               onChange={handleChange}\r\n//               className=\"input\"\r\n//             >\r\n//               <option value=\"\" disabled>Chọn giới tính</option>\r\n//               <option value=\"Nam\">Nam</option>\r\n//               <option value=\"Nữ\">Nữ</option>\r\n//               <option value=\"Khác\">Khác</option>\r\n//             </select>\r\n//           </div>\r\n//           </div>\r\n\r\n\r\n//           <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"city\">Tỉnh/Thành phố:</label>\r\n//             <select\r\n//               id=\"city\"\r\n//               name=\"city\"\r\n//               value={formData.city}\r\n//               onChange={handleChange}\r\n//               className=\"input\"\r\n//               placeholder=\"Tỉnh/Thành phố\"\r\n//             >\r\n//               <option value=\"\" disabled>Chọn tỉnh/thành phố</option>\r\n//               <option value=\"Ho Chi Minh\">Hồ Chí Minh</option>\r\n//               <option value=\"Ha Noi\">Hà Nội</option>\r\n//               <option value=\"Da Nang\">Đà Nẵng</option>\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"district\">Quận/Huyện:</label>\r\n//             <input\r\n//               list=\"districts\"\r\n//               id=\"district\"\r\n//               name=\"district\"\r\n//               value={formData.district}\r\n//               onChange={handleChange}\r\n//               className=\"input\"\r\n//               autoComplete=\"off\"\r\n//             />\r\n//             <datalist id=\"districts\">\r\n//               {districts.map((district, index) => (\r\n//                 <option key={index} value={district} />\r\n//               ))}\r\n//             </datalist>\r\n//           </div>\r\n//         </div>\r\n\r\n\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"address\"><span className=\"highlight\">* </span>Địa chỉ:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"address\"\r\n//             name=\"address\"\r\n//             value={formData.address}\r\n//             onChange={handleChange}\r\n//             className={`input ${errors.address ? 'input-error' : ''}`}\r\n//             placeholder=\"Địa chỉ\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n\r\n//         <button type=\"submit\">Cập nhật</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import \"../style.css\";\r\n\r\n// export default function MemberInfo() {\r\n//   const [formData, setFormData] = useState({\r\n//     fullname: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     cmnd: '',\r\n//     dob: '',\r\n//     city: '',\r\n//     district: '',\r\n//     gender: '', \r\n//     address: '', \r\n//     profilePicture: null\r\n//   });\r\n  \r\n//   const [districts, setDistricts] = useState([]);\r\n//   const [errors, setErrors] = useState({}); // Thêm state để quản lý lỗi\r\n\r\n//   const districtsByCity = {\r\n//     \"Ho Chi Minh\": [\r\n//       \"Quận 1\",\r\n//       \"Quận 2\",\r\n//       \"Quận 3\",\r\n//       \"Quận 4\",\r\n//       \"Quận 5\",\r\n//       \"Quận 6\",\r\n//       \"Quận 7\",\r\n//       \"Quận 8\",\r\n//       \"Quận 9\",\r\n//       \"Quận 10\",\r\n//       \"Quận 11\",\r\n//       \"Quận 12\",\r\n//       \"Bình Tân\",\r\n//       \"Bình Thạnh\",\r\n//       \"Gò Vấp\",\r\n//       \"Phú Nhuận\",\r\n//       \"Tân Bình\",\r\n//       \"Tân Phú\",\r\n//       \"Thủ Đức\"\r\n//     ],\r\n//     \"Ha Noi\": [\r\n//       \"Ba Đình\",\r\n//       \"Hoàn Kiếm\",\r\n//       \"Tây Hồ\",\r\n//       \"Long Biên\",\r\n//       \"Cầu Giấy\",\r\n//       \"Đống Đa\",\r\n//       \"Hai Bà Trưng\",\r\n//       \"Hoàng Mai\",\r\n//       \"Thanh Xuân\",\r\n//       \"Sóc Sơn\",\r\n//       \"Đông Anh\",\r\n//       \"Gia Lâm\",\r\n//       \"Nam Từ Liêm\",\r\n//       \"Bắc Từ Liêm\",\r\n//       \"Hà Đông\"\r\n//     ],\r\n//     \"Da Nang\": [\r\n//       \"Hải Châu\",\r\n//       \"Sơn Trà\",\r\n//       \"Ngũ Hành Sơn\",\r\n//       \"Liên Chiểu\",\r\n//       \"Cẩm Lệ\",\r\n//       \"Hoàng Sa\",\r\n//       \"Hòa Vang\",\r\n//       \"Thanh Khê\",\r\n//       \"Cẩm Sơn\"\r\n//     ],\r\n//     \"Hai Phong\": [\r\n//       \"Hồng Bàng\",\r\n//       \"Lê Chân\",\r\n//       \"Ngô Quyền\",\r\n//       \"Kiến An\",\r\n//       \"Hải An\",\r\n//       \"Dương Kinh\",\r\n//       \"Đồ Sơn\",\r\n//       \"An Dương\",\r\n//       \"An Lão\",\r\n//       \"Kiến Thụy\",\r\n//       \"Tiên Lãng\",\r\n//       \"Vĩnh Bảo\",\r\n//       \"Cát Hải\",\r\n//       \"Bạch Long Vĩ\",\r\n//       \"Thủy Nguyên\"\r\n//     ],\r\n//     \"Can Tho\": [\r\n//       \"Ninh Kiều\",\r\n//       \"Bình Thủy\",\r\n//       \"Cái Răng\",\r\n//       \"Ô Môn\",\r\n//       \"Thốt Nốt\",\r\n//       \"Phong Điền\",\r\n//       \"Cờ Đỏ\",\r\n//       \"Thới Lai\",\r\n//       \"Vĩnh Thạnh\"\r\n//     ]\r\n//     // Thêm các thành phố khác\r\n//   };\r\n\r\n//   // Cập nhật quận/huyện khi thay đổi thành phố\r\n//   useEffect(() => {\r\n//     if (formData.city) {\r\n//       setDistricts(districtsByCity[formData.city] || []);\r\n//     }\r\n//   }, [formData.city]);\r\n\r\n//   // Hàm xử lý khi thay đổi dữ liệu\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//     // Xóa thông báo lỗi khi người dùng bắt đầu nhập\r\n//     setErrors({ ...errors, [name]: '' });\r\n//   };\r\n\r\n//   // Hàm xem trước hình ảnh\r\n//   const previewImage = (event) => {\r\n//     const file = event.target.files[0];\r\n//     setFormData({ ...formData, profilePicture: file });\r\n    \r\n//     const reader = new FileReader();\r\n//     reader.onload = function(e) {\r\n//       const imagePreview = document.getElementById('imagePreview');\r\n//       imagePreview.style.backgroundImage = `url(${e.target.result})`;\r\n//       imagePreview.style.backgroundSize = 'cover';\r\n//       imagePreview.style.backgroundPosition = 'center';\r\n//       imagePreview.innerHTML = ''; // Xóa chữ \"No Image\"\r\n//     };\r\n//     if (file) {\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   // Hàm xử lý khi submit form\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd', 'address'];\r\n//     const fieldLabels = {\r\n//       fullname: 'Họ tên',\r\n//       email: 'Email',\r\n//       phone: 'Số điện thoại',\r\n//       dob: 'Ngày sinh',\r\n//       cmnd: 'CMND',\r\n//       address: 'Địa chỉ'\r\n//       // Thêm các trường khác nếu cần\r\n//     };\r\n\r\n//     let valid = true;\r\n//     let newErrors = {};\r\n\r\n//     for (let field of requiredFields) {\r\n//       if (!formData[field].trim()) {\r\n//         newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\r\n//         valid = false;\r\n//       }\r\n//     }\r\n\r\n//     if (!valid) {\r\n//       setErrors(newErrors);\r\n//       // Tự động cuộn đến phần đầu của form để người dùng thấy thông báo lỗi\r\n//       window.scrollTo({ top: 0, behavior: 'smooth' });\r\n//       return;\r\n//     }\r\n\r\n//     // Nếu tất cả các trường hợp lệ\r\n//     alert('Cập nhật thông tin thành công!');\r\n//     // Thực hiện các hành động tiếp theo như gửi dữ liệu lên server\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Thông tin tài khoản</h2>\r\n      \r\n//       {/* Hiển thị thông báo lỗi ở đầu form nếu có */}\r\n//       {Object.keys(errors).length > 0 && (\r\n//         <div className=\"error-messages\">\r\n//           {Object.values(errors).map((error, index) => (\r\n//             <p key={index} className=\"error-text\">{error}</p>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n      \r\n//       <form id=\"memberForm\" onSubmit={handleSubmit} noValidate encType=\"multipart/form-data\">\r\n//         <div className=\"image-upload-container\">\r\n//           <div \r\n//             id=\"imagePreview\" \r\n//             className=\"image-preview\" \r\n//             onClick={() => document.getElementById('profilePicture').click()}\r\n//           >\r\n//             <span>No Image</span>\r\n//           </div>\r\n//           <input\r\n//             type=\"file\"\r\n//             id=\"profilePicture\"\r\n//             name=\"profilePicture\"\r\n//             accept=\"image/*\"\r\n//             style={{ display: 'none' }}\r\n//             onChange={previewImage}\r\n//           />\r\n//           <button \r\n//             type=\"button\" \r\n//             onClick={() => document.getElementById('profilePicture').click()}\r\n//           >\r\n//             Tải ảnh lên\r\n//           </button>\r\n//         </div>\r\n\r\n//         <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"fullname\">\r\n//               <span className=\"highlight\">* </span>Họ tên:\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"fullname\"\r\n//               name=\"fullname\"\r\n//               value={formData.fullname}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.fullname ? 'input-error' : ''}`}\r\n//               placeholder=\"Họ tên\"\r\n//               required\r\n//             />\r\n//             {errors.fullname && <span className=\"error-text\">{errors.fullname}</span>}\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\">\r\n//               <span className=\"highlight\">* </span>Email:\r\n//             </label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.email ? 'input-error' : ''}`}\r\n//               placeholder=\"Email\"\r\n//               required\r\n//             />\r\n//             {errors.email && <span className=\"error-text\">{errors.email}</span>}\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Các trường khác tương tự */}\r\n//         <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"phone\">\r\n//               <span className=\"highlight\">* </span>Số điện thoại:\r\n//             </label>\r\n//             <input\r\n//               type=\"tel\"\r\n//               id=\"phone\"\r\n//               name=\"phone\"\r\n//               value={formData.phone}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.phone ? 'input-error' : ''}`}\r\n//               placeholder=\"Số điện thoại\"\r\n//               required\r\n//             />\r\n//             {errors.phone && <span className=\"error-text\">{errors.phone}</span>}\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"cmnd\">\r\n//               <span className=\"highlight\">* </span>CMND/Hộ chiếu:\r\n//             </label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"cmnd\"\r\n//               name=\"cmnd\"\r\n//               value={formData.cmnd}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.cmnd ? 'input-error' : ''}`}\r\n//               placeholder=\"CMND/Hộ chiếu\"\r\n//               required\r\n//             />\r\n//             {errors.cmnd && <span className=\"error-text\">{errors.cmnd}</span>}\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Hàng ngày sinh và Giới tính */}\r\n//         <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"dob\">\r\n//               <span className=\"highlight\">* </span>Ngày sinh:\r\n//             </label>\r\n//             <input\r\n//               type=\"date\"\r\n//               id=\"dob\"\r\n//               name=\"dob\"\r\n//               value={formData.dob}\r\n//               onChange={handleChange}\r\n//               className={`input ${errors.dob ? 'input-error' : ''}`}\r\n//               required\r\n//             />\r\n//             {errors.dob && <span className=\"error-text\">{errors.dob}</span>}\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"gender\">Giới tính:</label>\r\n//             <select\r\n//               id=\"gender\"\r\n//               name=\"gender\"\r\n//               value={formData.gender}\r\n//               onChange={handleChange}\r\n//               className=\"input\"\r\n//             >\r\n//               <option value=\"\" disabled>Chọn giới tính</option>\r\n//               <option value=\"Nam\">Nam</option>\r\n//               <option value=\"Nữ\">Nữ</option>\r\n//               <option value=\"Khác\">Khác</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"city\">Tỉnh/Thành phố:</label>\r\n//             <select\r\n//               id=\"city\"\r\n//               name=\"city\"\r\n//               value={formData.city}\r\n//               onChange={handleChange}\r\n//               className=\"input\"\r\n//               placeholder=\"Tỉnh/Thành phố\"\r\n//             >\r\n//               <option value=\"\" disabled>Chọn tỉnh/thành phố</option>\r\n//               <option value=\"Ho Chi Minh\">Hồ Chí Minh</option>\r\n//               <option value=\"Ha Noi\">Hà Nội</option>\r\n//               <option value=\"Da Nang\">Đà Nẵng</option>\r\n//               <option value=\"Hai Phong\">Hải Phòng</option>\r\n//               <option value=\"Can Tho\">Cần Thơ</option>\r\n//               {/* Thêm các thành phố khác nếu cần */}\r\n//             </select>\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"district\">Quận/Huyện:</label>\r\n//             <input\r\n//               list=\"districts\"\r\n//               id=\"district\"\r\n//               name=\"district\"\r\n//               value={formData.district}\r\n//               onChange={handleChange}\r\n//               className=\"input\"\r\n//               autoComplete=\"off\"\r\n//             />\r\n//             <datalist id=\"districts\">\r\n//               {districts.map((district, index) => (\r\n//                 <option key={index} value={district} />\r\n//               ))}\r\n//             </datalist>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"address\">\r\n//             <span className=\"highlight\">* </span>Địa chỉ:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"address\"\r\n//             name=\"address\"\r\n//             value={formData.address}\r\n//             onChange={handleChange}\r\n//             className={`input ${errors.address ? 'input-error' : ''}`}\r\n//             placeholder=\"Địa chỉ\"\r\n//             required\r\n//           />\r\n//           {errors.address && <span className=\"error-text\">{errors.address}</span>}\r\n//         </div>\r\n\r\n//         <button type=\"submit\">Cập nhật</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"../style.css\";\r\n\r\nexport default function MemberInfo() {\r\n  const [formData, setFormData] = useState({\r\n    fullname: '',\r\n    email: '',\r\n    phone: '',\r\n    cmnd: '',\r\n    dob: '',\r\n    city: '',\r\n    district: '',\r\n    gender: '', \r\n    address: '', \r\n    profilePicture: null\r\n  });\r\n  \r\n  const [districts, setDistricts] = useState([]);\r\n  const [errors, setErrors] = useState({}); // Định nghĩa setErrors ở đây\r\n\r\n  const districtsByCity = {\r\n    // Dữ liệu quận/huyện\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formData.city) {\r\n      setDistricts(districtsByCity[formData.city] || []);\r\n    }\r\n  }, [formData.city]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    setErrors({ ...errors, [name]: '' }); // Xóa lỗi khi người dùng nhập\r\n  };\r\n\r\n  const previewImage = (event) => {\r\n    const file = event.target.files[0];\r\n    setFormData({ ...formData, profilePicture: file });\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = function(e) {\r\n      const imagePreview = document.getElementById('imagePreview');\r\n      imagePreview.style.backgroundImage = `url(${e.target.result})`;\r\n      imagePreview.style.backgroundSize = 'cover';\r\n      imagePreview.style.backgroundPosition = 'center';\r\n      imagePreview.innerHTML = ''; // Xóa chữ \"No Image\"\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const requiredFields = ['fullname', 'email', 'phone', 'dob', 'cmnd', 'address'];\r\n    const fieldLabels = {\r\n      fullname: 'Họ tên',\r\n      email: 'Email',\r\n      phone: 'Số điện thoại',\r\n      dob: 'Ngày sinh',\r\n      cmnd: 'CMND',\r\n      address: 'Địa chỉ'\r\n    };\r\n\r\n    let valid = true;\r\n    let newErrors = {};\r\n\r\n    for (let field of requiredFields) {\r\n      if (!formData[field].trim()) {\r\n        newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    if (!valid) {\r\n      setErrors(newErrors); // Sử dụng setErrors ở đây\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      return;\r\n    }\r\n\r\n    // Nếu tất cả các trường hợp lệ\r\n    alert('Cập nhật thông tin thành công!');\r\n    // Thực hiện các hành động tiếp theo như gửi dữ liệu lên server\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Thông tin tài khoản</h2>\r\n      \r\n      {/* Hiển thị thông báo lỗi ở đầu form nếu có */}\r\n      {Object.keys(errors).length > 0 && (\r\n        <div className=\"error-messages\">\r\n          {Object.values(errors).map((error, index) => (\r\n            <p key={index} className=\"error-text\">{error}</p>\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      <form id=\"memberForm\" onSubmit={handleSubmit} noValidate encType=\"multipart/form-data\">\r\n        {/* Các trường nhập liệu */}\r\n        <button type=\"submit\">Cập nhật</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAWA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}