{"ast":null,"code":"/**\r\n * Hàm kiểm tra các trường bắt buộc trong form.\r\n * @param {Object} formData - Dữ liệu của form.\r\n * @param {Array} requiredFields - Danh sách các trường bắt buộc.\r\n * @param {Object} fieldLabels - Đối tượng ánh xạ giữa tên trường và nhãn hiển thị.\r\n * @returns {Object} - Kết quả kiểm tra với các thông báo lỗi và trạng thái hợp lệ.\r\n */\n// export const validateForm = (formData, requiredFields, fieldLabels) => {\n//     let valid = true;\n//     let newErrors = {};\n//     let firstError = '';\n\n//     for (let field of requiredFields) {\n//       if (!formData[field].trim()) {\n//         newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\n//         if (!firstError) {\n//           firstError = newErrors[field];\n//         }\n//         valid = false;\n//       }\n//     }\n\n//     return { valid, errors: newErrors, firstError };\n//   };\n\n// validateForm.js\nexport const validateForm = (Form, requiredFields, fieldLabels) => {\n  const errors = {};\n  let firstError = '';\n  requiredFields.forEach(field => {\n    if (!Form[field] || Form[field].trim() === '') {\n      errors[field] = `${fieldLabels[field]} là bắt buộc.`;\n      if (!firstError) {\n        firstError = `Vui lòng nhập ${fieldLabels[field]}`;\n      }\n    }\n  });\n  const valid = Object.keys(errors).length === 0;\n  return {\n    valid,\n    errors,\n    firstError: firstError\n  };\n};","map":{"version":3,"names":["validateForm","Form","requiredFields","fieldLabels","errors","firstError","forEach","field","trim","valid","Object","keys","length"],"sources":["D:/cnpm-test/src/Components/validateForm.js"],"sourcesContent":["\r\n\r\n/**\r\n * Hàm kiểm tra các trường bắt buộc trong form.\r\n * @param {Object} formData - Dữ liệu của form.\r\n * @param {Array} requiredFields - Danh sách các trường bắt buộc.\r\n * @param {Object} fieldLabels - Đối tượng ánh xạ giữa tên trường và nhãn hiển thị.\r\n * @returns {Object} - Kết quả kiểm tra với các thông báo lỗi và trạng thái hợp lệ.\r\n */\r\n// export const validateForm = (formData, requiredFields, fieldLabels) => {\r\n//     let valid = true;\r\n//     let newErrors = {};\r\n//     let firstError = '';\r\n  \r\n//     for (let field of requiredFields) {\r\n//       if (!formData[field].trim()) {\r\n//         newErrors[field] = `Vui lòng nhập ${fieldLabels[field]}!`;\r\n//         if (!firstError) {\r\n//           firstError = newErrors[field];\r\n//         }\r\n//         valid = false;\r\n//       }\r\n//     }\r\n  \r\n//     return { valid, errors: newErrors, firstError };\r\n//   };\r\n\r\n\r\n\r\n\r\n  // validateForm.js\r\nexport const validateForm = (Form, requiredFields, fieldLabels) => {\r\n  const errors = {};\r\n  let firstError = '';\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!Form[field] || Form[field].trim() === '') {\r\n      errors[field] = `${fieldLabels[field]} là bắt buộc.`;\r\n      if (!firstError) {\r\n        firstError = `Vui lòng nhập ${fieldLabels[field]}`;\r\n      }\r\n    }\r\n  });\r\n\r\n  const valid = Object.keys(errors).length === 0;\r\n\r\n  return {\r\n    valid,\r\n    errors,\r\n    firstError: firstError\r\n  };\r\n};\r\n\r\n  "],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAKE;AACF,OAAO,MAAMA,YAAY,GAAGA,CAACC,IAAI,EAAEC,cAAc,EAAEC,WAAW,KAAK;EACjE,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAIC,UAAU,GAAG,EAAE;EAEnBH,cAAc,CAACI,OAAO,CAACC,KAAK,IAAI;IAC9B,IAAI,CAACN,IAAI,CAACM,KAAK,CAAC,IAAIN,IAAI,CAACM,KAAK,CAAC,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7CJ,MAAM,CAACG,KAAK,CAAC,GAAG,GAAGJ,WAAW,CAACI,KAAK,CAAC,eAAe;MACpD,IAAI,CAACF,UAAU,EAAE;QACfA,UAAU,GAAG,iBAAiBF,WAAW,CAACI,KAAK,CAAC,EAAE;MACpD;IACF;EACF,CAAC,CAAC;EAEF,MAAME,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACP,MAAM,CAAC,CAACQ,MAAM,KAAK,CAAC;EAE9C,OAAO;IACLH,KAAK;IACLL,MAAM;IACNC,UAAU,EAAEA;EACd,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}